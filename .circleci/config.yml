version: 2
jobs:
  build:
    machine: true
    environment:
      CHANGE_MINIKUBE_NONE_USER: true
      K8S_VERSION: v1.10.0
      MINIKUBE_VERSION: v0.28.2
      HELM_VERSION: v2.9.1
    steps:
    - checkout
    - run:
        name: Get info
        command: |
          uname -a
          free -h
          cat /etc/os-release
    - run:
        name: Install kubectl
        command: |
          curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl && \
              chmod +x kubectl && \
              sudo mv kubectl /usr/local/bin/
    - run:
        name: Install minikube
        command: |
          curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 && \
              chmod +x minikube && \
              sudo mv minikube /usr/local/bin/
    - run:
        name: Start minikube
        command: |
          # TODO: remove the --bootstrapper flag once this issue is solved: https://github.com/kubernetes/minikube/issues/2704
          sudo minikube config set WantReportErrorPrompt false
          sudo -E minikube start --vm-driver=none --bootstrapper=localkube --kubernetes-version=${K8S_VERSION}
    - run:
        name: Wait for minikube
        command: |
          JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}';
          until sudo kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True";
            do sleep 1;
          done
    - run:
        name: Cluster info
        command: |
          sudo kubectl cluster-info
    - run:
        name: Install helm
        command: |
          curl -# -o helm-${HELM_VERSION}-linux-amd64.tar.gz https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz && \
              tar -xzf helm-${HELM_VERSION}-linux-amd64.tar.gz && \
              chmod +x linux-amd64/helm && \
              sudo mv linux-amd64/helm /usr/local/bin/
    - run:
        name: Helm init
        command: |
          helm init
          sleep 30
    - run:
        name: Helm install
        command: |
          helm upgrade --install demo --set service.type=NodePort demo
          sleep 30
          helm status demo
    - run:
        name: Test deployment
        command: |
          node_ip=$(kubectl get nodes --namespace default -o jsonpath="{.items[0].status.addresses[0].address}")
          node_port=$(kubectl get --namespace default -o jsonpath="{.spec.ports[0].nodePort}" services demo)

          echo "Service demo node port is ${node_port}"

          url=http://${node_ip}:${node_port}

          # A plain curl to the service to see output (debug)
          echo "Verbose curl -v ${url}"
          echo -----------
          curl -v ${url}
          echo -----------

          echo "Testing http code for ${url}"
          response_code=$(curl -s -o /dev/null -w "%{http_code}" ${url})

          echo "Response code is ${response_code}"
          if [ "${response_code}" == 200 ]; then
            echo "SUCCESS"
          else
            echo "FAILED"
            exit 1
          fi
